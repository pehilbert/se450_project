**ASK ABOUT SWAP**

Heaps
=====

We are taking an array and treating it like a tree.

"Root node" is always index 0

These are used as a priority queue

How to get index of children:
- Left child = index * 2 + 1
- Right child = index * 2 + 2

How to get index of parent:
- (index - 1) / 2 (as an integer)

Enqueueing:
1. Add value at index size
2. increment size

Now we have to heapify going up, also known as "bubble up"
- Check if we are greater than parent
--- Swap with parent
--- Recurse up to new index

Dequeueing:
1. Take out value at index 0
2. Replace with value at index size - 1
3. Decrement size of the array

Now we have to find the right place for the min value,
We do this using a process callled "trickle-down" or "heapify"
- Check if one of the children is greater than the parent
--- Swap parent with largest of two children
--- Recurse down to new parent index

